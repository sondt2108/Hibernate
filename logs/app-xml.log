[DEBUG] 30-03-2022 17:33:44 [main] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 30-03-2022 17:33:44 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 30-03-2022 17:33:44 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 30-03-2022 17:33:44 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 30-03-2022 17:33:44 [main] Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[DEBUG] 30-03-2022 17:33:44 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 30-03-2022 17:33:44 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
[WARN ] 30-03-2022 17:33:44 [main] deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] 30-03-2022 17:33:44 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 30-03-2022 17:33:44 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 30-03-2022 17:33:44 [main] Configuration - Building session factory using internal StandardServiceRegistryBuilder
[DEBUG] 30-03-2022 17:33:44 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 30-03-2022 17:33:44 [main] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 30-03-2022 17:33:44 [main] StrategyCreatorRegionFactoryImpl - RegionFactory impl [org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory] did not provide constructor accepting Properties
[DEBUG] 30-03-2022 17:33:44 [main] StrategyCreatorRegionFactoryImpl - RegionFactory impl [org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory] did not provide constructor accepting Properties
[WARN ] 30-03-2022 17:33:44 [main] deprecation - HHH020100: The Ehcache second-level cache provider for Hibernate is deprecated.  See https://hibernate.atlassian.net/browse/HHH-12441 for details.
[DEBUG] 30-03-2022 17:33:44 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory
[INFO ] 30-03-2022 17:33:44 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@344b8190
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@344b8190
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@344b8190
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@718607eb
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@676f0a60
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@55b62629
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ba745bc
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ba745bc
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ba745bc
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a3a299
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a3a299
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a3a299
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@42561fba
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@42561fba
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@42561fba
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@13cda7c9
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@13cda7c9
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@13cda7c9
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6826c41e
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6826c41e
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6826c41e
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2d691f3d
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2d691f3d
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2d691f3d
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71154f21
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71154f21
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71154f21
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aa3d36
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aa3d36
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240139e1
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240139e1
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@109f5dd8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@109f5dd8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57f64f5e
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c30b71f
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2577d6c8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2577d6c8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@43d455c9
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@43d455c9
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4287d447
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4287d447
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15515c51
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15515c51
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@16943e88
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@16943e88
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d2387c8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d2387c8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@13e9f2e2
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@13e9f2e2
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f651cd8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f651cd8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@430fa4ef
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@430fa4ef
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1a78dacd
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a78dacd
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@34448e6c
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34448e6c
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@65e7f52a
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65e7f52a
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65e7f52a
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4aeaadc1
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1059754c
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1059754c
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1059754c
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64040287
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@39ce27f2
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@38b972d7
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38b972d7
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@29006752
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@29006752
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e6fd0b9
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e6fd0b9
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@66eb985d
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66eb985d
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@607b2792
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@607b2792
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31611954
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1bd81830
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1bd81830
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1bd81830
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@25cc7470
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@25cc7470
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@25cc7470
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@20d11153
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@502f8b57
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@323659f8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@323659f8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@323659f8
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33a630fa
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33a630fa
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33a630fa
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@790132f7
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@547c04c4
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4fa06f52
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4fa06f52
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c443976
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5f5b5ca4
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f5b5ca4
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6b9c69a9
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b9c69a9
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@412c995d
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a8a8b75
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@39aa45a1
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5300f14a
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5300f14a
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54acff7d
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7bc9e6ab
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5488b5c5
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4248ed58
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@712ca57b
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4564e94b
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54534abf
[DEBUG] 30-03-2022 17:33:44 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51745f40
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 30-03-2022 17:33:44 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 30-03-2022 17:33:44 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/employee
[INFO ] 30-03-2022 17:33:44 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 30-03-2022 17:33:44 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 30-03-2022 17:33:44 [MLog-Init-Reporter] MLog - MLog clients using log4j2 logging.
[DEBUG] 30-03-2022 17:33:44 [MLog-Init-Reporter] MLog - Reading VM config for path list /com/mchange/v2/log/default-mchange-log.properties, /mchange-commons.properties, /c3p0.properties, hocon:/reference,/application,/c3p0,/, /mchange-log.properties, /
[DEBUG] 30-03-2022 17:33:44 [MLog-Init-Reporter] MLog - The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [MLog-Init-Reporter] MLog - The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [MLog-Init-Reporter] MLog - The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [MLog-Init-Reporter] MLog - The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [main] MConfig - The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [main] MConfig - The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [main] MConfig - The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [main] MConfig - The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
[INFO ] 30-03-2022 17:33:44 [main] C3P0Registry - Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
[DEBUG] 30-03-2022 17:33:44 [main] DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf3xjan1olf6ad18ifn9i|250b236d,name=1hgf3xjan1olf6ad18ifn9i|250b236d registered.
[DEBUG] 30-03-2022 17:33:44 [main] DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf3xjan1olf6ad18ifn9i|250b236d,name=1hgf3xjan1olf6ad18ifn9i|250b236d unregistered, in order to be reregistered after update.
[DEBUG] 30-03-2022 17:33:44 [main] DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf3xjan1olf6ad18ifn9i|250b236d,name=1hgf3xjan1olf6ad18ifn9i|250b236d registered.
[INFO ] 30-03-2022 17:33:44 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[INFO ] 30-03-2022 17:33:44 [main] AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@a99497f4 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@5357dd6e [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgf3xjan1olf6ad18ifn9i|25d3cfc8, idleConnectionTestPeriod -> 0, initialPoolSize -> 2, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 180, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 3, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 2, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@6df3d117 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgf3xjan1olf6ad18ifn9i|1bcb79c2, jdbcUrl -> jdbc:mysql://localhost:3306/employee, properties -> {password=******, user=******} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgf3xjan1olf6ad18ifn9i|250b236d, numHelperThreads -> 3 ]
[DEBUG] 30-03-2022 17:33:44 [main] MConfig - The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [main] MConfig - The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [main] MConfig - The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [main] MConfig - The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
[DEBUG] 30-03-2022 17:33:44 [main] BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@232cce0 config: [start -> 2; min -> 2; max -> 3; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 180000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 45000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
[DEBUG] 30-03-2022 17:33:44 [main] C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'ro******'.
[DEBUG] 30-03-2022 17:33:44 [main] BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 2; desired target? 1
[DEBUG] 30-03-2022 17:33:44 [main] BasicResourcePool - awaitAvailable(): [unknown]
[DEBUG] 30-03-2022 17:33:45 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
[DEBUG] 30-03-2022 17:33:45 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
[DEBUG] 30-03-2022 17:33:45 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 30-03-2022 17:33:45 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 30-03-2022 17:33:45 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 30-03-2022 17:33:45 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 30-03-2022 17:33:45 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@238acd0b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23811a09]
[DEBUG] 30-03-2022 17:33:45 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 30-03-2022 17:33:45 [main] AnnotationBinder - Binding entity from annotated class: models.Employee
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 30-03-2022 17:33:45 [main] EntityBinder - Import with entity name Employee
[DEBUG] 30-03-2022 17:33:45 [main] EntityBinder - Bind entity models.Employee on table employee
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 30-03-2022 17:33:45 [main] ClassLoaderAccessImpl - Not known whether passed class name [models.Employee] is safe
[DEBUG] 30-03-2022 17:33:45 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Employee
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 30-03-2022 17:33:45 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:id]
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - Building property id
[DEBUG] 30-03-2022 17:33:45 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 30-03-2022 17:33:45 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:address]
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - Building property address
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='dept_id', referencedColumn='', mappedBy=''}
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=department, insertable=true, updatable=true, unique=false}
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - Building property department
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 30-03-2022 17:33:45 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:email]
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - Building property email
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fullName, insertable=true, updatable=true, unique=false}
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 30-03-2022 17:33:45 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:fullName]
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - Building property fullName
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=phoneNumber, insertable=true, updatable=true, unique=false}
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
[DEBUG] 30-03-2022 17:33:45 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:phoneNumber]
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - building SimpleValue for phoneNumber
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - Building property phoneNumber
[DEBUG] 30-03-2022 17:33:45 [main] AnnotationBinder - Binding entity from annotated class: models.Department
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 30-03-2022 17:33:45 [main] EntityBinder - Import with entity name Department
[DEBUG] 30-03-2022 17:33:45 [main] EntityBinder - Bind entity models.Department on table departments
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=dept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 30-03-2022 17:33:45 [main] ClassLoaderAccessImpl - Not known whether passed class name [models.Department] is safe
[DEBUG] 30-03-2022 17:33:45 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Department
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - MetadataSourceProcessor property dept_id with lazy=false
[DEBUG] 30-03-2022 17:33:45 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Department:dept_id]
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - building SimpleValue for dept_id
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - Building property dept_id
[DEBUG] 30-03-2022 17:33:45 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(dept_id)]), dept_id, identity, , ...)
[DEBUG] 30-03-2022 17:33:45 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=dept_name, insertable=true, updatable=true, unique=false}
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - MetadataSourceProcessor property dept_name with lazy=false
[DEBUG] 30-03-2022 17:33:45 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Department:dept_name]
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - building SimpleValue for dept_name
[DEBUG] 30-03-2022 17:33:45 [main] PropertyBinder - Building property dept_name
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - Starting fillSimpleValue for phoneNumber
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - Starting fillSimpleValue for dept_id
[DEBUG] 30-03-2022 17:33:45 [main] SimpleValueBinder - Starting fillSimpleValue for dept_name
[DEBUG] 30-03-2022 17:33:45 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [employee]
[DEBUG] 30-03-2022 17:33:45 [main] PrimaryKey - Forcing column [dept_id] to be non-null as it is part of the primary key for table [departments]
[DEBUG] 30-03-2022 17:33:45 [main] InFlightMetadataCollectorImpl - Resolving reference to class: models.Department
[DEBUG] 30-03-2022 17:33:45 [main] InFlightMetadataCollectorImpl - Resolving reference to class: models.Department
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryImpl - Building session factory
[DEBUG] 30-03-2022 17:33:45 [main] Settings - SessionFactory name : null
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Statistics: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Default entity-mode: pojo
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Default batch fetch size: -1
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Default null ordering: NONE
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 30-03-2022 17:33:45 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Query language substitutions: {}
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Named query checking : enabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Second-level cache: enabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Second-level query cache: enabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardTimestampsCacheFactory@70c0a3d5
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Second-level cache region prefix: null
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - JDBC batch size: 15
[DEBUG] 30-03-2022 17:33:45 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Scrollable result sets: enabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Wrap result sets: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - JDBC result set fetch size: null
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 30-03-2022 17:33:45 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - JPA compliance - query : disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - JPA compliance - lists : disabled
[DEBUG] 30-03-2022 17:33:45 [main] Settings - JPA compliance - transactions : disabled
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 30-03-2022 17:33:45 [main] SingletonEhcacheRegionFactory - prepending / to /ehcache.xml. It should be placed in the root of the classpath rather than in a package.
[DEBUG] 30-03-2022 17:33:45 [main] ehcache - Creating EhCacheRegionFactory from a specified resource: /ehcache.xml.  Resolved to URL: file:/D:/MyMaven/Hibernate/target/classes/ehcache.xml
[WARN ] 30-03-2022 17:33:45 [main] cache - HHH90001006: Missing cache[default-update-timestamps-region] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.cache.ehcache.missing_cache_strategy' to 'create'.
[WARN ] 30-03-2022 17:33:45 [main] cache - HHH90001007: Using legacy cache name [org.hibernate.cache.internal.StandardQueryCache] because configuration could not be found for cache [default-query-results-region]. Update your configuration to rename cache [org.hibernate.cache.internal.StandardQueryCache] to [default-query-results-region].
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.min_size=2, java.class.path=D:\MyMaven\Hibernate\target\classes;C:\Users\dtson1.TMA\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\dtson1.TMA\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\dtson1.TMA\.m2\repository\org\hibernate\hibernate-c3p0\5.6.7.Final\hibernate-c3p0-5.6.7.Final.jar;C:\Users\dtson1.TMA\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\dtson1.TMA\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\dtson1.TMA\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\dtson1.TMA\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\dtson1.TMA\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\dtson1.TMA\.m2\repository\org\hibernate\hibernate-core\5.6.7.Final\hibernate-core-5.6.7.Final.jar;C:\Users\dtson1.TMA\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\dtson1.TMA\.m2\repository\net\bytebuddy\byte-buddy\1.12.8\byte-buddy-1.12.8.jar;C:\Users\dtson1.TMA\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\dtson1.TMA\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\dtson1.TMA\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\dtson1.TMA\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\dtson1.TMA\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\dtson1.TMA\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\dtson1.TMA\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\dtson1.TMA\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\dtson1.TMA\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\dtson1.TMA\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\dtson1.TMA\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\dtson1.TMA\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\dtson1.TMA\.m2\repository\org\ehcache\ehcache\3.0.0\ehcache-3.0.0.jar;C:\Users\dtson1.TMA\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;C:\Users\dtson1.TMA\.m2\repository\org\hibernate\hibernate-ehcache\5.6.7.Final\hibernate-ehcache-5.6.7.Final.jar;C:\Users\dtson1.TMA\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar, net.sf.ehcache.configurationResourceName=ehcache.xml, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Bangkok, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, cache.use_query_cache=true, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\dtson1.TMA\.jdks\openjdk-17.0.2\bin, sun.java.command=dao.EmployeeDao, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\dtson1.TMA, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\dtson1.TMA\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=180, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=3, java.runtime.version=17.0.2+8-86, user.name=dtson1, hibernate.cache.use_query_cache=true, path.separator=;, hibernate.net.sf.ehcache.configurationResourceName=ehcache.xml, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/employee, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\dtson1.TMA\AppData\Local\Temp\, java.version=17.0.2, user.dir=D:\MyMaven\Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@16a5eb6d, native.encoding=Cp1252, hibernate.cache.use_second_level_cache=true, java.library.path=C:\Users\dtson1.TMA\.jdks\openjdk-17.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Eclipse Adoptium\jdk-11.0.14.101-hotspot\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\dtson1.TMA\AppData\Local\Microsoft\WindowsApps;;C:\Users\dtson1.TMA\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=61.0}
[DEBUG] 30-03-2022 17:33:45 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 30-03-2022 17:33:45 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@238acd0b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3451f01d]
[WARN ] 30-03-2022 17:33:45 [main] cache - HHH90001006: Missing cache[models.Department] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.cache.ehcache.missing_cache_strategy' to 'create'.
[DEBUG] 30-03-2022 17:33:45 [main] DomainDataRegionTemplate - Generating entity cache access [read-only] : NavigableRole[models.Department]
[WARN ] 30-03-2022 17:33:45 [main] cache - HHH90001003: Read-only caching was requested for mutable entity [NavigableRole[models.Department]]
[WARN ] 30-03-2022 17:33:45 [main] cache - HHH90001006: Missing cache[models.Employee] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.cache.ehcache.missing_cache_strategy' to 'create'.
[DEBUG] 30-03-2022 17:33:45 [main] DomainDataRegionTemplate - Generating entity cache access [read-only] : NavigableRole[models.Employee]
[WARN ] 30-03-2022 17:33:45 [main] cache - HHH90001003: Read-only caching was requested for mutable entity [NavigableRole[models.Employee]]
[DEBUG] 30-03-2022 17:33:45 [main] ClassLoaderAccessImpl - Not known whether passed class name [models.Department] is safe
[DEBUG] 30-03-2022 17:33:45 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Department
[DEBUG] 30-03-2022 17:33:45 [main] interceptor - To-one property `models.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 30-03-2022 17:33:45 [main] interceptor - To-one property `models.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 30-03-2022 17:33:45 [main] ClassLoaderAccessImpl - Not known whether passed class name [models.Employee] is safe
[DEBUG] 30-03-2022 17:33:45 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Employee
[DEBUG] 30-03-2022 17:33:45 [main] interceptor - To-one property `models.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 30-03-2022 17:33:45 [main] interceptor - To-one property `models.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister - Static SQL for entity: models.Department
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Version select: select dept_id from departments where dept_id =?
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Snapshot select: select department_.dept_id, department_.dept_name as dept_nam2_0_ from departments department_ where department_.dept_id=?
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Insert 0: insert into departments (dept_name, dept_id) values (?, ?)
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Update 0: update departments set dept_name=? where dept_id=?
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Delete 0: delete from departments where dept_id=?
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Identity insert: insert into departments (dept_name) values (?)
[DEBUG] 30-03-2022 17:33:45 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@647b9364]
[DEBUG] 30-03-2022 17:33:45 [main] MetamodelGraphWalker - Visiting attribute path : dept_name
[DEBUG] 30-03-2022 17:33:45 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 30-03-2022 17:33:45 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 30-03-2022 17:33:45 [main] LoadPlanTreePrinter - LoadPlan(entity=models.Department)
    - Returns
       - EntityReturnImpl(entity=models.Department, querySpaceUid=<gen:0>, path=models.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=models.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {dept_id1_0_0_}

[DEBUG] 30-03-2022 17:33:45 [main] EntityLoader - Static select for entity models.Department [NONE]: select department0_.dept_id as dept_id1_0_0_, department0_.dept_name as dept_nam2_0_0_ from departments department0_ where department0_.dept_id=?
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister - Static SQL for entity: models.Employee
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Version select: select id from employee where id =?
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Snapshot select: select employee_.id, employee_.address as address2_1_, employee_.dept_id as dept_id6_1_, employee_.email as email3_1_, employee_.fullName as fullname4_1_, employee_.phoneNumber as phonenum5_1_ from employee employee_ where employee_.id=?
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Insert 0: insert into employee (address, dept_id, email, fullName, phoneNumber, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Update 0: update employee set address=?, dept_id=?, email=?, fullName=?, phoneNumber=? where id=?
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Delete 0: delete from employee where id=?
[DEBUG] 30-03-2022 17:33:45 [main] AbstractEntityPersister -  Identity insert: insert into employee (address, dept_id, email, fullName, phoneNumber) values (?, ?, ?, ?, ?)
[DEBUG] 30-03-2022 17:33:45 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64518270]
[DEBUG] 30-03-2022 17:33:45 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 30-03-2022 17:33:45 [main] MetamodelGraphWalker - Visiting attribute path : department
[DEBUG] 30-03-2022 17:33:45 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@421d54b3]
[DEBUG] 30-03-2022 17:33:45 [main] MetamodelGraphWalker - Visiting attribute path : department.dept_name
[DEBUG] 30-03-2022 17:33:45 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 30-03-2022 17:33:45 [main] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 30-03-2022 17:33:45 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 30-03-2022 17:33:45 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 30-03-2022 17:33:45 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 30-03-2022 17:33:45 [main] LoadPlanTreePrinter - LoadPlan(entity=models.Employee)
    - Returns
       - EntityReturnImpl(entity=models.Employee, querySpaceUid=<gen:0>, path=models.Employee)
          - EntityAttributeFetchImpl(entity=models.Department, querySpaceUid=<gen:1>, path=models.Employee.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=models.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {dept_id1_0_1_}

[DEBUG] 30-03-2022 17:33:45 [main] EntityLoader - Static select for entity models.Employee [NONE]: select employee0_.id as id1_1_0_, employee0_.address as address2_1_0_, employee0_.dept_id as dept_id6_1_0_, employee0_.email as email3_1_0_, employee0_.fullName as fullname4_1_0_, employee0_.phoneNumber as phonenum5_1_0_, department1_.dept_id as dept_id1_0_1_, department1_.dept_name as dept_nam2_0_1_ from employee employee0_ left outer join departments department1_ on employee0_.dept_id=department1_.dept_id where employee0_.id=?
[INFO ] 30-03-2022 17:33:45 [main] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@474749b8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 30-03-2022 17:33:45 [main] Table - No alter strings for table : departments
[DEBUG] 30-03-2022 17:33:45 [main] Table - No alter strings for table : employee
[DEBUG] 30-03-2022 17:33:45 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 30-03-2022 17:33:45 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e62319f
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryRegistry - Registering SessionFactory: 88300076-b350-40f3-8d5c-4b1bbbf1e5f4 (<unnamed>)
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 30-03-2022 17:33:45 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 30-03-2022 17:33:45 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 30-03-2022 17:33:45 [main] TransactionImpl - begin
[DEBUG] 30-03-2022 17:33:45 [main] SQL - 
    select
        employee0_.id as id1_1_0_,
        employee0_.address as address2_1_0_,
        employee0_.dept_id as dept_id6_1_0_,
        employee0_.email as email3_1_0_,
        employee0_.fullName as fullname4_1_0_,
        employee0_.phoneNumber as phonenum5_1_0_,
        department1_.dept_id as dept_id1_0_1_,
        department1_.dept_name as dept_nam2_0_1_ 
    from
        employee employee0_ 
    left outer join
        departments department1_ 
            on employee0_.dept_id=department1_.dept_id 
    where
        employee0_.id=?
[DEBUG] 30-03-2022 17:33:45 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Resolving attributes for [models.Employee#4]
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Processing attribute `address` : value = France
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Processing attribute `department` : value = 2
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Attribute (`department`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Processing attribute `email` : value = cist@gmail.com
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Processing attribute `fullName` : value = Ajata Chesa
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Processing attribute `phoneNumber` : value = 0986584562
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Attribute (`phoneNumber`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Adding entity to second-level cache: [models.Employee#4]
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Done materializing entity [models.Employee#4]
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Resolving attributes for [models.Department#2]
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Processing attribute `dept_name` : value = CFO
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Attribute (`dept_name`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Adding entity to second-level cache: [models.Department#2]
[DEBUG] 30-03-2022 17:33:45 [main] TwoPhaseLoad - Done materializing entity [models.Department#2]
[DEBUG] 30-03-2022 17:33:45 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : models.Employee#4
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Ajata Chesa
[DEBUG] 30-03-2022 17:33:45 [main] TransactionImpl - committing
[DEBUG] 30-03-2022 17:33:45 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 30-03-2022 17:33:45 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 30-03-2022 17:33:45 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 30-03-2022 17:33:45 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 30-03-2022 17:33:45 [main] EntityPrinter - Listing entities:
[DEBUG] 30-03-2022 17:33:45 [main] EntityPrinter - models.Department{dept_name=CFO, dept_id=2}
[DEBUG] 30-03-2022 17:33:45 [main] EntityPrinter - models.Employee{address=France, phoneNumber=0986584562, fullName=Ajata Chesa, id=4, department=models.Department#2, email=cist@gmail.com}
[DEBUG] 30-03-2022 17:33:45 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 30-03-2022 17:33:45 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - statistics enabled : false
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - statistics enabled : true
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Second Level Hit Count = 0
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Second Level Hit Count = 0
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - --------------------1-------------------------
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 30-03-2022 17:33:45 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - employee-------------------1 : Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Second Level Hit Count = 2
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Second Level Hit Count = 2
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - --------------------2-------------------------
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 30-03-2022 17:33:45 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 30-03-2022 17:33:45 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - employee-------------------2 : Ajata Chesa
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Second Level Hit Count = 4
[INFO ] 30-03-2022 17:33:45 [main] EmployeeDao - Second Level Hit Count = 4
[INFO ] 30-03-2022 17:33:48 [main] EmployeeDao - --------------------5-------------------------
[DEBUG] 30-03-2022 17:33:48 [main] SQL - 
    select
        employee0_.id as id1_1_0_,
        employee0_.address as address2_1_0_,
        employee0_.dept_id as dept_id6_1_0_,
        employee0_.email as email3_1_0_,
        employee0_.fullName as fullname4_1_0_,
        employee0_.phoneNumber as phonenum5_1_0_,
        department1_.dept_id as dept_id1_0_1_,
        department1_.dept_name as dept_nam2_0_1_ 
    from
        employee employee0_ 
    left outer join
        departments department1_ 
            on employee0_.dept_id=department1_.dept_id 
    where
        employee0_.id=?
[DEBUG] 30-03-2022 17:33:48 [main] GooGooStatementCache - com.mchange.v2.c3p0.stmt.GlobalMaxOnlyStatementCache ----> CACHE HIT
[DEBUG] 30-03-2022 17:33:48 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Resolving attributes for [models.Employee#6]
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Processing attribute `address` : value = England
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Processing attribute `department` : value = 1
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Attribute (`department`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Processing attribute `email` : value = shae@gmail.com
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Processing attribute `fullName` : value = Jkey Shae
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Processing attribute `phoneNumber` : value = 0986584562
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Attribute (`phoneNumber`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Adding entity to second-level cache: [models.Employee#6]
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Done materializing entity [models.Employee#6]
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Resolving attributes for [models.Department#1]
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Processing attribute `dept_name` : value = CEO
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Attribute (`dept_name`)  - enhanced for lazy-loading? - false
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Adding entity to second-level cache: [models.Department#1]
[DEBUG] 30-03-2022 17:33:48 [main] TwoPhaseLoad - Done materializing entity [models.Department#1]
[DEBUG] 30-03-2022 17:33:48 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : models.Employee#6
[DEBUG] 30-03-2022 17:33:48 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 30-03-2022 17:33:48 [main] EmployeeDao - employee-------------------5 : Jkey Shae
[INFO ] 30-03-2022 17:33:48 [main] EmployeeDao - Second Level Hit Count = 4
[INFO ] 30-03-2022 17:33:48 [main] EmployeeDao - Second Level Hit Count = 4
[DEBUG] 30-03-2022 17:33:48 [main] SessionFactoryImpl - HHH000031: Closing
[DEBUG] 30-03-2022 17:33:48 [main] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@154b8cb6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3451f01d]
[DEBUG] 30-03-2022 17:33:48 [main] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[DEBUG] 30-03-2022 17:33:48 [main] ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf3xjan1olf6ad18ifn9i|250b236d,name=1hgf3xjan1olf6ad18ifn9i|250b236d unregistered.
[DEBUG] 30-03-2022 17:33:48 [main] ActiveManagementCoordinator - C3P0Registry mbean unregistered.
[DEBUG] 30-03-2022 17:33:48 [Resource Destroyer in BasicResourcePool.close()] BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2763535f
[DEBUG] 30-03-2022 17:33:48 [Resource Destroyer in BasicResourcePool.close()] C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2763535f
[DEBUG] 30-03-2022 17:33:48 [main] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[DEBUG] 30-03-2022 17:33:48 [Resource Destroyer in BasicResourcePool.close()] C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2763535f
[DEBUG] 30-03-2022 17:33:48 [Resource Destroyer in BasicResourcePool.close()] BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2763535f
[DEBUG] 30-03-2022 17:33:48 [Resource Destroyer in BasicResourcePool.close()] BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@40626ab
[DEBUG] 30-03-2022 17:33:48 [Resource Destroyer in BasicResourcePool.close()] C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@40626ab
[DEBUG] 30-03-2022 17:33:48 [Resource Destroyer in BasicResourcePool.close()] C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@40626ab
[DEBUG] 30-03-2022 17:33:48 [Resource Destroyer in BasicResourcePool.close()] BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@40626ab
[DEBUG] 31-03-2022 11:19:19 [main] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 31-03-2022 11:19:19 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 31-03-2022 11:19:19 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 31-03-2022 11:19:19 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 31-03-2022 11:19:20 [main] Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[DEBUG] 31-03-2022 11:19:20 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 31-03-2022 11:19:20 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
[WARN ] 31-03-2022 11:19:20 [main] deprecation - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] 31-03-2022 11:19:20 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 31-03-2022 11:19:20 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 31-03-2022 11:19:20 [main] Configuration - Building session factory using internal StandardServiceRegistryBuilder
[DEBUG] 31-03-2022 11:19:20 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 31-03-2022 11:19:20 [main] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 31-03-2022 11:19:20 [main] StrategyCreatorRegionFactoryImpl - RegionFactory impl [org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory] did not provide constructor accepting Properties
[DEBUG] 31-03-2022 11:19:20 [main] StrategyCreatorRegionFactoryImpl - RegionFactory impl [org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory] did not provide constructor accepting Properties
[WARN ] 31-03-2022 11:19:20 [main] deprecation - HHH020100: The Ehcache second-level cache provider for Hibernate is deprecated.  See https://hibernate.atlassian.net/browse/HHH-12441 for details.
[DEBUG] 31-03-2022 11:19:20 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory
[INFO ] 31-03-2022 11:19:20 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@344b8190
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@344b8190
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@344b8190
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@718607eb
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@676f0a60
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@55b62629
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ba745bc
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5ba745bc
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ba745bc
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a3a299
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a3a299
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a3a299
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@42561fba
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@42561fba
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@42561fba
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@13cda7c9
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@13cda7c9
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@13cda7c9
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6826c41e
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6826c41e
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6826c41e
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2d691f3d
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2d691f3d
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2d691f3d
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71154f21
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71154f21
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71154f21
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aa3d36
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aa3d36
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@240139e1
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@240139e1
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@109f5dd8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@109f5dd8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57f64f5e
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c30b71f
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2577d6c8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2577d6c8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@43d455c9
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@43d455c9
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4287d447
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4287d447
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15515c51
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15515c51
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@16943e88
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@16943e88
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d2387c8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d2387c8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@13e9f2e2
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@13e9f2e2
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f651cd8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f651cd8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@430fa4ef
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@430fa4ef
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1a78dacd
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a78dacd
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@34448e6c
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34448e6c
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@65e7f52a
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65e7f52a
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65e7f52a
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4aeaadc1
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1059754c
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1059754c
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1059754c
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64040287
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@39ce27f2
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@38b972d7
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38b972d7
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@29006752
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@29006752
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e6fd0b9
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e6fd0b9
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@66eb985d
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66eb985d
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@607b2792
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@607b2792
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31611954
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1bd81830
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1bd81830
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1bd81830
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@25cc7470
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@25cc7470
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@25cc7470
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@20d11153
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@502f8b57
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@323659f8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@323659f8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@323659f8
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33a630fa
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33a630fa
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33a630fa
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@790132f7
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@547c04c4
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4fa06f52
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4fa06f52
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c443976
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5f5b5ca4
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f5b5ca4
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6b9c69a9
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b9c69a9
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@412c995d
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a8a8b75
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@39aa45a1
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5300f14a
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5300f14a
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54acff7d
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7bc9e6ab
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5488b5c5
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4248ed58
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@712ca57b
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4564e94b
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54534abf
[DEBUG] 31-03-2022 11:19:20 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51745f40
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 31-03-2022 11:19:20 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 31-03-2022 11:19:20 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/employee
[INFO ] 31-03-2022 11:19:20 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 31-03-2022 11:19:20 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 31-03-2022 11:19:20 [MLog-Init-Reporter] MLog - MLog clients using log4j2 logging.
[DEBUG] 31-03-2022 11:19:20 [MLog-Init-Reporter] MLog - Reading VM config for path list /com/mchange/v2/log/default-mchange-log.properties, /mchange-commons.properties, /c3p0.properties, hocon:/reference,/application,/c3p0,/, /mchange-log.properties, /
[DEBUG] 31-03-2022 11:19:20 [MLog-Init-Reporter] MLog - The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [MLog-Init-Reporter] MLog - The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [MLog-Init-Reporter] MLog - The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [MLog-Init-Reporter] MLog - The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [main] MConfig - The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [main] MConfig - The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [main] MConfig - The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [main] MConfig - The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
[INFO ] 31-03-2022 11:19:20 [main] C3P0Registry - Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
[DEBUG] 31-03-2022 11:19:20 [main] DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf3xjan1pnhjbt1exj89k|250b236d,name=1hgf3xjan1pnhjbt1exj89k|250b236d registered.
[DEBUG] 31-03-2022 11:19:20 [main] DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf3xjan1pnhjbt1exj89k|250b236d,name=1hgf3xjan1pnhjbt1exj89k|250b236d unregistered, in order to be reregistered after update.
[DEBUG] 31-03-2022 11:19:20 [main] DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgf3xjan1pnhjbt1exj89k|250b236d,name=1hgf3xjan1pnhjbt1exj89k|250b236d registered.
[INFO ] 31-03-2022 11:19:20 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[INFO ] 31-03-2022 11:19:20 [main] AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@9a17103c [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@43da55b6 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgf3xjan1pnhjbt1exj89k|25d3cfc8, idleConnectionTestPeriod -> 0, initialPoolSize -> 2, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 180, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 3, maxStatements -> 50, maxStatementsPerConnection -> 0, minPoolSize -> 2, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@5e76495f [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgf3xjan1pnhjbt1exj89k|1bcb79c2, jdbcUrl -> jdbc:mysql://localhost:3306/employee, properties -> {password=******, user=******} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgf3xjan1pnhjbt1exj89k|250b236d, numHelperThreads -> 3 ]
[DEBUG] 31-03-2022 11:19:20 [main] MConfig - The configuration file for resource identifier '/mchange-commons.properties' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [main] MConfig - The configuration file for resource identifier '/mchange-log.properties' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [main] MConfig - The configuration file for resource identifier '/c3p0.properties' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [main] MConfig - The configuration file for resource identifier 'hocon:/reference,/application,/c3p0,/' could not be found. Skipping.
[DEBUG] 31-03-2022 11:19:20 [main] BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@352e787a config: [start -> 2; min -> 2; max -> 3; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 180000; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 45000; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
[DEBUG] 31-03-2022 11:19:20 [main] C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'ro******'.
[DEBUG] 31-03-2022 11:19:20 [main] BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 2; desired target? 1
[DEBUG] 31-03-2022 11:19:20 [main] BasicResourcePool - awaitAvailable(): [unknown]
[DEBUG] 31-03-2022 11:19:20 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
[DEBUG] 31-03-2022 11:19:20 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
[DEBUG] 31-03-2022 11:19:20 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 31-03-2022 11:19:20 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 31-03-2022 11:19:20 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 31-03-2022 11:19:20 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 31-03-2022 11:19:20 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2125ad3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a5b769b]
[DEBUG] 31-03-2022 11:19:20 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 31-03-2022 11:19:20 [main] AnnotationBinder - Binding entity from annotated class: models.Employee
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 31-03-2022 11:19:20 [main] EntityBinder - Import with entity name Employee
[DEBUG] 31-03-2022 11:19:20 [main] EntityBinder - Bind entity models.Employee on table employee
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 31-03-2022 11:19:20 [main] ClassLoaderAccessImpl - Not known whether passed class name [models.Employee] is safe
[DEBUG] 31-03-2022 11:19:20 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Employee
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 31-03-2022 11:19:20 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:id]
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - Building property id
[DEBUG] 31-03-2022 11:19:20 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 31-03-2022 11:19:20 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:address]
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - Building property address
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='dept_id', referencedColumn='', mappedBy=''}
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=department, insertable=true, updatable=true, unique=false}
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - Building property department
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 31-03-2022 11:19:20 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:email]
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - Building property email
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=fullName, insertable=true, updatable=true, unique=false}
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 31-03-2022 11:19:20 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:fullName]
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - Building property fullName
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(employee), mappingColumn=phoneNumber, insertable=true, updatable=true, unique=false}
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
[DEBUG] 31-03-2022 11:19:20 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Employee:phoneNumber]
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - building SimpleValue for phoneNumber
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - Building property phoneNumber
[DEBUG] 31-03-2022 11:19:20 [main] AnnotationBinder - Binding entity from annotated class: models.Department
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 31-03-2022 11:19:20 [main] EntityBinder - Import with entity name Department
[DEBUG] 31-03-2022 11:19:20 [main] EntityBinder - Bind entity models.Department on table departments
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=dept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 31-03-2022 11:19:20 [main] ClassLoaderAccessImpl - Not known whether passed class name [models.Department] is safe
[DEBUG] 31-03-2022 11:19:20 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Department
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - MetadataSourceProcessor property dept_id with lazy=false
[DEBUG] 31-03-2022 11:19:20 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Department:dept_id]
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - building SimpleValue for dept_id
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - Building property dept_id
[DEBUG] 31-03-2022 11:19:20 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(dept_id)]), dept_id, identity, , ...)
[DEBUG] 31-03-2022 11:19:20 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(departments), mappingColumn=dept_name, insertable=true, updatable=true, unique=false}
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - MetadataSourceProcessor property dept_name with lazy=false
[DEBUG] 31-03-2022 11:19:20 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [models.Department:dept_name]
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - building SimpleValue for dept_name
[DEBUG] 31-03-2022 11:19:20 [main] PropertyBinder - Building property dept_name
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - Starting fillSimpleValue for phoneNumber
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - Starting fillSimpleValue for dept_id
[DEBUG] 31-03-2022 11:19:20 [main] SimpleValueBinder - Starting fillSimpleValue for dept_name
[DEBUG] 31-03-2022 11:19:20 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [employee]
[DEBUG] 31-03-2022 11:19:20 [main] PrimaryKey - Forcing column [dept_id] to be non-null as it is part of the primary key for table [departments]
[DEBUG] 31-03-2022 11:19:20 [main] InFlightMetadataCollectorImpl - Resolving reference to class: models.Department
[DEBUG] 31-03-2022 11:19:20 [main] InFlightMetadataCollectorImpl - Resolving reference to class: models.Department
[DEBUG] 31-03-2022 11:19:20 [main] SessionFactoryImpl - Building session factory
[DEBUG] 31-03-2022 11:19:20 [main] Settings - SessionFactory name : null
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Statistics: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Default entity-mode: pojo
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Default batch fetch size: -1
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Default null ordering: NONE
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 31-03-2022 11:19:20 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Query language substitutions: {}
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Named query checking : enabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Second-level cache: enabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Second-level query cache: enabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardTimestampsCacheFactory@260a3a5e
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Second-level cache region prefix: null
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - JDBC batch size: 15
[DEBUG] 31-03-2022 11:19:20 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Scrollable result sets: enabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Wrap result sets: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - JDBC result set fetch size: null
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 31-03-2022 11:19:20 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - JPA compliance - query : disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - JPA compliance - lists : disabled
[DEBUG] 31-03-2022 11:19:20 [main] Settings - JPA compliance - transactions : disabled
[DEBUG] 31-03-2022 11:19:20 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 31-03-2022 11:19:20 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 31-03-2022 11:19:20 [main] SingletonEhcacheRegionFactory - prepending / to /ehcache.xml. It should be placed in the root of the classpath rather than in a package.
[DEBUG] 31-03-2022 11:19:20 [main] ehcache - Creating EhCacheRegionFactory from a specified resource: /ehcache.xml.  Resolved to URL: file:/D:/MyMaven/Hibernate/target/classes/ehcache.xml
[WARN ] 31-03-2022 11:19:20 [main] cache - HHH90001006: Missing cache[default-update-timestamps-region] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.cache.ehcache.missing_cache_strategy' to 'create'.
[WARN ] 31-03-2022 11:19:20 [main] cache - HHH90001007: Using legacy cache name [org.hibernate.cache.internal.StandardQueryCache] because configuration could not be found for cache [default-query-results-region]. Update your configuration to rename cache [org.hibernate.cache.internal.StandardQueryCache] to [default-query-results-region].
[DEBUG] 31-03-2022 11:19:20 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 31-03-2022 11:19:20 [main] SessionFactoryImpl - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.min_size=2, java.class.path=D:\MyMaven\Hibernate\target\classes;C:\Users\dtson1.TMA\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\dtson1.TMA\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\dtson1.TMA\.m2\repository\org\hibernate\hibernate-c3p0\5.6.7.Final\hibernate-c3p0-5.6.7.Final.jar;C:\Users\dtson1.TMA\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\dtson1.TMA\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\dtson1.TMA\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\dtson1.TMA\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\dtson1.TMA\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.2\log4j-core-2.17.2.jar;C:\Users\dtson1.TMA\.m2\repository\org\hibernate\hibernate-core\5.6.7.Final\hibernate-core-5.6.7.Final.jar;C:\Users\dtson1.TMA\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\dtson1.TMA\.m2\repository\net\bytebuddy\byte-buddy\1.12.8\byte-buddy-1.12.8.jar;C:\Users\dtson1.TMA\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\dtson1.TMA\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\dtson1.TMA\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\dtson1.TMA\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\dtson1.TMA\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\dtson1.TMA\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\dtson1.TMA\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\dtson1.TMA\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\dtson1.TMA\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\dtson1.TMA\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\dtson1.TMA\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\dtson1.TMA\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\dtson1.TMA\.m2\repository\org\ehcache\ehcache\3.0.0\ehcache-3.0.0.jar;C:\Users\dtson1.TMA\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;C:\Users\dtson1.TMA\.m2\repository\org\hibernate\hibernate-ehcache\5.6.7.Final\hibernate-ehcache-5.6.7.Final.jar;C:\Users\dtson1.TMA\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar, net.sf.ehcache.configurationResourceName=ehcache.xml, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Bangkok, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, cache.use_query_cache=true, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\dtson1.TMA\.jdks\openjdk-17.0.2\bin, sun.java.command=dao.EmployeeDao, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\dtson1.TMA, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\dtson1.TMA\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=180, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=3, java.runtime.version=17.0.2+8-86, user.name=dtson1, hibernate.cache.use_query_cache=true, path.separator=;, hibernate.net.sf.ehcache.configurationResourceName=ehcache.xml, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/employee, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\dtson1.TMA\AppData\Local\Temp\, java.version=17.0.2, user.dir=D:\MyMaven\Hibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5e8507f1, native.encoding=Cp1252, hibernate.cache.use_second_level_cache=true, java.library.path=C:\Users\dtson1.TMA\.jdks\openjdk-17.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Eclipse Adoptium\jdk-11.0.14.101-hotspot\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\dtson1.TMA\AppData\Local\Microsoft\WindowsApps;;C:\Users\dtson1.TMA\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=61.0}
[DEBUG] 31-03-2022 11:19:20 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 31-03-2022 11:19:20 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 31-03-2022 11:19:20 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2125ad3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2ecf5915]
[WARN ] 31-03-2022 11:19:20 [main] cache - HHH90001006: Missing cache[models.Employee] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.cache.ehcache.missing_cache_strategy' to 'create'.
[DEBUG] 31-03-2022 11:19:20 [main] DomainDataRegionTemplate - Generating entity cache access [read-only] : NavigableRole[models.Employee]
[WARN ] 31-03-2022 11:19:21 [main] cache - HHH90001003: Read-only caching was requested for mutable entity [NavigableRole[models.Employee]]
[WARN ] 31-03-2022 11:19:21 [main] cache - HHH90001006: Missing cache[models.Department] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.cache.ehcache.missing_cache_strategy' to 'create'.
[DEBUG] 31-03-2022 11:19:21 [main] DomainDataRegionTemplate - Generating entity cache access [read-only] : NavigableRole[models.Department]
[WARN ] 31-03-2022 11:19:21 [main] cache - HHH90001003: Read-only caching was requested for mutable entity [NavigableRole[models.Department]]
[DEBUG] 31-03-2022 11:19:21 [main] ClassLoaderAccessImpl - Not known whether passed class name [models.Department] is safe
[DEBUG] 31-03-2022 11:19:21 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Department
[DEBUG] 31-03-2022 11:19:21 [main] interceptor - To-one property `models.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 31-03-2022 11:19:21 [main] interceptor - To-one property `models.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 31-03-2022 11:19:21 [main] ClassLoaderAccessImpl - Not known whether passed class name [models.Employee] is safe
[DEBUG] 31-03-2022 11:19:21 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : models.Employee
[DEBUG] 31-03-2022 11:19:21 [main] interceptor - To-one property `models.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 31-03-2022 11:19:21 [main] interceptor - To-one property `models.Employee#department` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister - Static SQL for entity: models.Department
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Version select: select dept_id from departments where dept_id =?
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Snapshot select: select department_.dept_id, department_.dept_name as dept_nam2_0_ from departments department_ where department_.dept_id=?
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Insert 0: insert into departments (dept_name, dept_id) values (?, ?)
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Update 0: update departments set dept_name=? where dept_id=?
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Delete 0: delete from departments where dept_id=?
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Identity insert: insert into departments (dept_name) values (?)
[DEBUG] 31-03-2022 11:19:21 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34330f77]
[DEBUG] 31-03-2022 11:19:21 [main] MetamodelGraphWalker - Visiting attribute path : dept_name
[DEBUG] 31-03-2022 11:19:21 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 31-03-2022 11:19:21 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 31-03-2022 11:19:21 [main] LoadPlanTreePrinter - LoadPlan(entity=models.Department)
    - Returns
       - EntityReturnImpl(entity=models.Department, querySpaceUid=<gen:0>, path=models.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=models.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {dept_id1_0_0_}

[DEBUG] 31-03-2022 11:19:21 [main] EntityLoader - Static select for entity models.Department [NONE]: select department0_.dept_id as dept_id1_0_0_, department0_.dept_name as dept_nam2_0_0_ from departments department0_ where department0_.dept_id=?
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister - Static SQL for entity: models.Employee
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Version select: select id from employee where id =?
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Snapshot select: select employee_.id, employee_.address as address2_1_, employee_.dept_id as dept_id6_1_, employee_.email as email3_1_, employee_.fullName as fullname4_1_, employee_.phoneNumber as phonenum5_1_ from employee employee_ where employee_.id=?
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Insert 0: insert into employee (address, dept_id, email, fullName, phoneNumber, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Update 0: update employee set address=?, dept_id=?, email=?, fullName=?, phoneNumber=? where id=?
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Delete 0: delete from employee where id=?
[DEBUG] 31-03-2022 11:19:21 [main] AbstractEntityPersister -  Identity insert: insert into employee (address, dept_id, email, fullName, phoneNumber) values (?, ?, ?, ?, ?)
[DEBUG] 31-03-2022 11:19:21 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b959df]
[DEBUG] 31-03-2022 11:19:21 [main] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 31-03-2022 11:19:21 [main] MetamodelGraphWalker - Visiting attribute path : department
[DEBUG] 31-03-2022 11:19:21 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f1fb828]
[DEBUG] 31-03-2022 11:19:21 [main] MetamodelGraphWalker - Visiting attribute path : department.dept_name
[DEBUG] 31-03-2022 11:19:21 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 31-03-2022 11:19:21 [main] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 31-03-2022 11:19:21 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 31-03-2022 11:19:21 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 31-03-2022 11:19:21 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 31-03-2022 11:19:21 [main] LoadPlanTreePrinter - LoadPlan(entity=models.Employee)
    - Returns
       - EntityReturnImpl(entity=models.Employee, querySpaceUid=<gen:0>, path=models.Employee)
          - EntityAttributeFetchImpl(entity=models.Department, querySpaceUid=<gen:1>, path=models.Employee.department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=models.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=models.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {dept_id1_0_1_}

[DEBUG] 31-03-2022 11:19:21 [main] EntityLoader - Static select for entity models.Employee [NONE]: select employee0_.id as id1_1_0_, employee0_.address as address2_1_0_, employee0_.dept_id as dept_id6_1_0_, employee0_.email as email3_1_0_, employee0_.fullName as fullname4_1_0_, employee0_.phoneNumber as phonenum5_1_0_, department1_.dept_id as dept_id1_0_1_, department1_.dept_name as dept_nam2_0_1_ from employee employee0_ left outer join departments department1_ on employee0_.dept_id=department1_.dept_id where employee0_.id=?
[INFO ] 31-03-2022 11:19:21 [main] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7fef0b40] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 31-03-2022 11:19:21 [main] Table - No alter strings for table : departments
[DEBUG] 31-03-2022 11:19:21 [main] Table - No alter strings for table : employee
[DEBUG] 31-03-2022 11:19:21 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 31-03-2022 11:19:21 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 31-03-2022 11:19:21 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 31-03-2022 11:19:21 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@183fc2fa
[DEBUG] 31-03-2022 11:19:21 [main] SessionFactoryRegistry - Registering SessionFactory: c90a2a53-bd01-4127-a813-c57d465090be (<unnamed>)
[DEBUG] 31-03-2022 11:19:21 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 31-03-2022 11:19:21 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 31-03-2022 11:19:21 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 31-03-2022 11:19:21 [main] TransactionImpl - begin
[DEBUG] 31-03-2022 11:19:21 [main] SQL - 
    select
        employee0_.id as id1_1_0_,
        employee0_.address as address2_1_0_,
        employee0_.dept_id as dept_id6_1_0_,
        employee0_.email as email3_1_0_,
        employee0_.fullName as fullname4_1_0_,
        employee0_.phoneNumber as phonenum5_1_0_,
        department1_.dept_id as dept_id1_0_1_,
        department1_.dept_name as dept_nam2_0_1_ 
    from
        employee employee0_ 
    left outer join
        departments department1_ 
            on employee0_.dept_id=department1_.dept_id 
    where
        employee0_.id=?
[DEBUG] 31-03-2022 11:19:21 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Resolving attributes for [models.Employee#4]
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Processing attribute `address` : value = France
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Processing attribute `department` : value = 2
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Attribute (`department`)  - enhanced for lazy-loading? - false
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Processing attribute `email` : value = cist@gmail.com
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Processing attribute `fullName` : value = Ajata Chesa
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Processing attribute `phoneNumber` : value = 0986584562
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Attribute (`phoneNumber`)  - enhanced for lazy-loading? - false
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Adding entity to second-level cache: [models.Employee#4]
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Done materializing entity [models.Employee#4]
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Resolving attributes for [models.Department#2]
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Processing attribute `dept_name` : value = CFO
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Attribute (`dept_name`)  - enhanced for lazy-loading? - false
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Adding entity to second-level cache: [models.Department#2]
[DEBUG] 31-03-2022 11:19:21 [main] TwoPhaseLoad - Done materializing entity [models.Department#2]
[DEBUG] 31-03-2022 11:19:21 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : models.Employee#4
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[INFO ] 31-03-2022 11:19:21 [main] EmployeeDao - Ajata Chesa
[DEBUG] 31-03-2022 11:19:21 [main] TransactionImpl - committing
[DEBUG] 31-03-2022 11:19:21 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 31-03-2022 11:19:21 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 31-03-2022 11:19:21 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 31-03-2022 11:19:21 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 31-03-2022 11:19:21 [main] EntityPrinter - Listing entities:
[DEBUG] 31-03-2022 11:19:21 [main] EntityPrinter - models.Department{dept_name=CFO, dept_id=2}
[DEBUG] 31-03-2022 11:19:21 [main] EntityPrinter - models.Employee{address=France, phoneNumber=0986584562, fullName=Ajata Chesa, id=4, department=models.Department#2, email=cist@gmail.com}
[DEBUG] 31-03-2022 11:19:21 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 31-03-2022 11:19:21 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 31-03-2022 11:22:20 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Checking for expired resources - Thu Mar 31 11:22:20 ICT 2022 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:22:20 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - BEGIN check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:22:20 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - FINISHED check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Checking for expired resources - Thu Mar 31 11:23:05 ICT 2022 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - BEGIN check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - EXPIRED idle resource: com.mchange.v2.c3p0.impl.NewPooledConnection@422c6c78 ---> idle_time: 224227; max_idle_time: 180000 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Removing expired resource: com.mchange.v2.c3p0.impl.NewPooledConnection@422c6c78 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - EXPIRED idle resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3127ca4f ---> idle_time: 224888; max_idle_time: 180000 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Removing expired resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3127ca4f [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - FINISHED check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#1] BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@422c6c78
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#0] BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3127ca4f
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#1] C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@422c6c78
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#0] C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3127ca4f
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#1] C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@422c6c78
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#0] C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3127ca4f
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#1] BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@422c6c78
[DEBUG] 31-03-2022 11:23:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#0] BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3127ca4f
[DEBUG] 31-03-2022 11:23:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Checking for expired resources - Thu Mar 31 11:23:50 ICT 2022 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - BEGIN check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:23:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - FINISHED check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:24:35 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Checking for expired resources - Thu Mar 31 11:24:35 ICT 2022 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:24:35 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - BEGIN check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:24:35 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - FINISHED check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:25:20 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Checking for expired resources - Thu Mar 31 11:25:20 ICT 2022 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:25:20 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - BEGIN check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:25:20 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - FINISHED check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Checking for expired resources - Thu Mar 31 11:26:05 ICT 2022 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - BEGIN check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - EXPIRED idle resource: com.mchange.v2.c3p0.impl.NewPooledConnection@856ed74 ---> idle_time: 180001; max_idle_time: 180000 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Removing expired resource: com.mchange.v2.c3p0.impl.NewPooledConnection@856ed74 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - FINISHED check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#2] BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@856ed74
[DEBUG] 31-03-2022 11:26:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#2] C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@856ed74
[DEBUG] 31-03-2022 11:26:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#2] C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@856ed74
[DEBUG] 31-03-2022 11:26:05 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#2] BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@856ed74
[DEBUG] 31-03-2022 11:26:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Checking for expired resources - Thu Mar 31 11:26:50 ICT 2022 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - BEGIN check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - EXPIRED idle resource: com.mchange.v2.c3p0.impl.NewPooledConnection@247c22a0 ---> idle_time: 224999; max_idle_time: 180000 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - Removing expired resource: com.mchange.v2.c3p0.impl.NewPooledConnection@247c22a0 [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-AdminTaskTimer] BasicResourcePool - FINISHED check for expired resources.  [com.mchange.v2.resourcepool.BasicResourcePool@352e787a]
[DEBUG] 31-03-2022 11:26:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#1] BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@247c22a0
[DEBUG] 31-03-2022 11:26:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#1] C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@247c22a0
[DEBUG] 31-03-2022 11:26:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#1] C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@247c22a0
[DEBUG] 31-03-2022 11:26:50 [C3P0PooledConnectionPoolManager[identityToken->1hgf3xjan1pnhjbt1exj89k|250b236d]-HelperThread-#1] BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@247c22a0
